// SPDX-License-Identifier: MIT
pragma solidity >=0.5.0 <0.9.0;

library console {
    function _castLogViewToPure(function(bytes memory) internal view fnIn) internal pure returns (function(bytes memory) internal pure fnOut) {
        assembly {
            fnOut := fnIn
        }
    }

    function _logView(bytes memory data) internal view {
        assembly {
            pop(staticcall(gas(), {{ .Addr }}, add(data, 0x20), mload(data), 0, 0))
        }
    }

    function _log(bytes memory data) internal pure {
        _castLogViewToPure(_logView)(data);
    }

    {{- range .Args }}
    {{- if not .IsLogType }}{{ continue }}{{ end }}

    function {{ .LogTypeSignature }} internal pure {
        _log(abi.encodeWithSignature({{ printf "%q" .Sig -}}, {{ .Params }}));
    }
    {{- end }}

    {{- range .Args }}
    {{- if not .IsLog }}{{ continue }}{{ end }}

    function {{ .LogSignature }} internal pure {
        _log(abi.encodeWithSignature({{ printf "%q" .Sig -}}
        {{- if .Params -}}
            , {{ .Params }}
        {{- end -}}
        ));
    }
    {{- end }}
}
